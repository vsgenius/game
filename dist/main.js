!function(){"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),function(){var e;t.g.importScripts&&(e=t.g.location+"");var a=t.g.document;if(!e&&a&&(a.currentScript&&(e=a.currentScript.src),!e)){var n=a.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&!e;)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e}();var e=t.p+"d78d3440c35ee99ebece.png",a=t.p+"2206dcce49a91fb94fb2.png",n=t.p+"32861cad022def3ab698.png",o=t.p+"e06bea2acf7ebc0b6c54.png",i=t.p+"404e84bf956b2059c32b.png",c=t.p+"83e614ad9dd4d3238d52.png",s=t.p+"ca227f711535701a8f5c.png";window.application={url:" https://skypro-rock-scissors-paper.herokuapp.com",app:document.querySelector(".app"),players:[],blocks:{errorNetwork:async()=>[{block:"p",cls:["waiting__text"],textContent:"Ошибка подключения"},{block:"button",cls:"btn",textContent:"Повторить",event:async()=>{if(application.gameId){const t=await application.useCases.getPlayerStatus();if(console.log(t),t["player-status"]&&t["player-status"].game)return application.gameId=t["player-status"].game.id,void application.events.start()}application.renderScreen("lobby")}},{block:"button",cls:"btn",textContent:"Перелогиниться",event:async()=>{application.token="",application.gameId="",application.renderScreen("login")}}],login:()=>[{block:"label",cls:"",attr:{for:"input__login"},textContent:"Введите ник"},{block:"input",cls:["input__login","input__name"],attr:{id:"login",type:"login"}},{block:"button",cls:"btn",textContent:"Войти",event:application.events.login}],playerList:t=>{const e=[{block:"h1",cls:"",textContent:"Лобби"}];for(const a of t)a.you||e.push({block:"p",cls:"lobby__name",textContent:a.login});return e},play:()=>({block:"button",cls:"btn",textContent:"Начать игру",event:application.events.start}),move:()=>[{block:"h1",cls:"",textContent:"Игра"},{block:"p",cls:"game__player",textContent:`Вы против ${application.name}`},{block:"div",cls:"game__btns",content:[application.blocks.gameBlock(application.events.move)]}],waiting:t=>[{block:"h1",cls:"",textContent:"Игра"},{block:"p",cls:"game__player",textContent:application.name?`Вы против ${application.name}`:""},{block:"img",cls:["waiting__clock"],attr:{src:s,alt:"waiting"}},{block:"p",cls:["waiting__text"],textContent:t}],victory:()=>[{block:"img",cls:["win__image"],attr:{src:c,alt:"win"}},{block:"h2",textContent:`Вы победили ${application.name}`}],failure:()=>[{block:"img",cls:["win__image"],attr:{src:e,alt:"lose"}},{block:"h2",textContent:`Вы проиграли ${application.name}`}],toLobby:()=>({block:"button",cls:"btn",textContent:"Перейти в лобби",event:async()=>{application.gameId="",application.name="","error"!==(await application.useCases.getPlayerStatus()).status?(application.intervals.updatePlayersList(),application.renderScreen("lobby")):application.renderScreen("lobby")}}),playMore:()=>({block:"button",cls:"btn",textContent:"Играть еще",event:()=>{application.gameId="",application.name="",application.events.start()}}),imageHeader:function(){return{block:"img",cls:["img","header__image"],textContent:"Войти в игру",attr:{src:o}}},main:function(){return{block:"button",cls:"btn",textContent:"Войти",event:application.events.enter}},gameBlock:function(t){return{block:"div",cls:"game__btn",event:t,content:[{block:"img",cls:"image",dataSetName:"rock",attr:{src:a,alt:"rock"}},{block:"img",cls:"image",dataSetName:"scissors",attr:{src:i,alt:"scissors"}},{block:"img",cls:"image",dataSetName:"paper",attr:{src:n,alt:"paper"}}]}}},screens:{lose:function(){const t=application.blocks;return{block:"div",cls:"win",content:[{block:"h1",cls:"",textContent:"Игра"},{block:"p",cls:"game__player",textContent:`Вы против ${application.name}`},{block:"div",cls:"win__block",content:[t.failure(),t.playMore(),t.toLobby()]}]}},win:function(){const t=application.blocks;return{block:"div",cls:"win",content:[{block:"h1",cls:"",textContent:"Игра"},{block:"p",cls:"game__player",textContent:`против ${application.name}`},{block:"div",cls:"win__block",content:[t.victory(),t.playMore(),t.toLobby()]},{block:"div",cls:"win__block",content:[]}]}},waiting:function(t){return{block:"div",cls:"waiting",content:application.blocks.waiting(t)}},game:function(){return{block:"div",cls:"game",content:application.blocks.move()}},login:function(){return{block:"div",cls:"login",content:application.blocks.login()}},main:async function(){const t=await application.useCases.getStatusNetwork(),e=application.blocks;if(t)return{block:"div",cls:"main",content:e.main()}},lobby:async function(){const t=await application.useCases.getPlayersList();console.log(t);const e=application.blocks;return{block:"div",cls:"lobby",content:[...e.playerList(t.list),e.play()]}},loader:function(){return{block:"span",cls:"loader"}},errorNetwork:async function(){application.clearTimers();const t=application.blocks;return{block:"div",cls:"error",content:await t.errorNetwork()}}},status:function(t){document.querySelector(t).classList.toggle("className")},renderScreen:async function(t,e){application.app.textContent="",application.app.appendChild(this.renderEngine(await application.screens[t](e)))},renderEngine:function(t){if(null==t||!1===t)return document.createTextNode("");if(typeof t===String||typeof t===Number||!0===typeof t)return document.createTextNode(t);if(Array.isArray(t)){const e=document.createDocumentFragment();for(const a of t){const t=this.renderEngine(a);e.appendChild(t)}return e}const e=document.createElement(t.block);if(e.appendChild(this.renderEngine(t.content)),t.cls){const a=[].concat(t.cls);e.classList.add(...a)}if(t.attr)for(const[a,n]of Object.entries(t.attr))e.setAttribute(a,n);return t.textContent&&(e.textContent=t.textContent),t.event&&e.addEventListener("click",t.event),t.dataSetName&&(e.dataset.name=t.dataSetName),e},renderBlock:function(t,e){e.appendChild(t)},clearTimers:function(){for(const t of application.timers)window.clearInterval(t),window.clearTimeout(t)},setToken:t=>{window.localStorage.setItem("game-token",t),application.token=t},getToken:()=>(application.token=window.localStorage.getItem("game-token"),application.token),token:"",events:{enter:async()=>{console.log("events -login");const t=await application.useCases.getPlayerStatus();if(window.localStorage.getItem("game-token")&&"ok"===t.status){if(t["player-status"].game)return application.gameId=t["player-status"].game.id,void application.events.start();application.clearTimers(),application.intervals.updatePlayersList(),application.renderScreen("lobby")}else application.renderScreen("login")},login:async t=>{console.log(" events -login"),await application.useCases.getLogin(t),application.clearTimers(),application.intervals.updatePlayersList(),application.intervals.playerStatus(),application.renderScreen("lobby")},start:async()=>{if(console.log("events -start"),application.clearTimers(),console.log(application.gameId),!application.gameId){const t=await application.useCases.gameStart();"player is already in game"!==t.message&&(application.gameId=t["player-status"].game.id,console.log(application.gameId))}const t=await application.useCases.getStatusGame();console.log(t),t&&"no game id"!==t.message&&(console.log(t),"waiting-for-start"===t["game-status"].status&&(application.intervals.gameStatus(),application.renderScreen("waiting","Ожидаем игрока")),"waiting-for-enemy-move"===t["game-status"].status&&(application.intervals.gameStatus(),application.renderScreen("waiting","Ожидаем хода соперника")),"waiting-for-your-move"===t["game-status"].status&&application.renderScreen("game"),console.log(t),"lose"===t["game-status"].status&&application.renderScreen("lose"),"win"===t["game-status"].status&&application.renderScreen("win"))},move:async t=>{console.log("events - move");const{target:e}=t;if("image"!==e.className)return;console.log(e.dataset.name);const a=await application.useCases.move(e.dataset.name);console.log(a),application.events.start()}},useCases:{move:async t=>{console.log("useCases - move");try{const e=await fetch(application.url+"/play?token="+application.token+"&id="+application.gameId+"&move="+t);if(console.log(e),200!==e.status)throw new Error("Ошибка");const a=await e.json();return console.log(a),a}catch(t){application.renderScreen("errorNetwork")}},getPlayersList:async()=>{console.log("useCases - getPlayersList");try{const t=window.localStorage.getItem("game-token");t||application.renderScreen("login");const e=await fetch(application.url+"/player-list?token="+t);if(200!==e.status)throw new Error("Ошибка");return await e.json()}catch(t){application.renderScreen("errorNetwork")}},gameStart:async t=>{console.log("useCases - gameStart");try{const t=await fetch(application.url+"/start?token="+application.getToken());if(200!==t.status)throw new Error("Ошибка");return application.app.textContent="",await t.json()}catch(t){application.renderScreen("errorNetwork")}},getLogin:async t=>{console.log("useCases - getLogin");const e=t.target.closest(".login").querySelector(".input__login").value;application.renderScreen("loader");try{const t=await fetch(application.url+"/login?login="+e);if(200!==t.status)throw new Error("Ошибка");application.app.textContent="";const a=await t.json();return window.localStorage.setItem("game-token",a.token),a}catch(t){application.renderScreen("errorNetwork")}},getStatusNetwork:async()=>{console.log("useCases - getStatusNetwork"),application.renderScreen("loader");try{const t=await fetch(application.url+"/ping");if(200!==t.status)throw new Error("Ошибка");application.app.textContent="";const e=await t.json();return application.intervals.ping(),e}catch(t){application.renderScreen("errorNetwork")}},getStatusGame:async()=>{console.log("useCases - getStatusGame");try{const t=await fetch(application.url+"/game-status?token="+application.getToken()+"&id="+application.gameId);if(200!==t.status)throw new Error("Ошибка");const e=await t.json();return e["game-status"].enemy&&(application.name=e["game-status"].enemy.login),console.log(e),e}catch(t){application.renderScreen("errorNetwork")}},ping:async()=>{console.log("useCases - ping");try{const t=await fetch(application.url+"/ping");if(200!==t.status)throw new Error("Ошибка");return await t.json()}catch(t){application.renderScreen("errorNetwork")}},getPlayerStatus:async()=>{console.log("useCases - getPlayerStatus");try{const t=await fetch(application.url+"/player-status?token="+application.getToken());if(200!==t.status)throw new Error("Ошибка");return await t.json()}catch(t){application.renderScreen("errorNetwork")}}},intervals:{ping:()=>{const t=setInterval((async()=>{await application.useCases.ping()}),2e3);application.timers.push(t)},updatePlayersList:()=>{const t=setInterval((async()=>{const t=await application.useCases.getPlayersList();JSON.stringify(application.players)!==JSON.stringify(t)&&application.renderScreen("lobby"),application.players=t}),2e3);application.timers.push(t)},gameStatus:()=>{const t=setInterval((async()=>{const t=await application.useCases.getStatusGame();t["game-status"].enemy&&(application.name=t["game-status"].enemy.login),application.events.start(),console.log(t)}),1e3);application.timers.push(t)},playerStatus:()=>{const t=setInterval((async()=>{const t=await application.useCases.getStatusGame();console.log(t)}),11e4);application.timers.push(t)}},gameId:"",timers:[],name:""},application.renderScreen("main")}();